#include "imports/stdlib.fc";

const slice our_wallet = "EQDZel0-T5Qlj3r6uY2s3IESRLgVPaD0A5kcyECxx3RXNChL"a;

const slice donation_tag = "donation";  ;; message for streamer's share
const slice withdraw_tag = "withdraw";  ;; message for withdraw

const int op::withdraw = 888444;         ;; 888444 = withdraw
const int op::comment = 0;               ;; 0 = comment

const int commision_percent = 100 - 6;   ;; 6%
const int min_amount = 100000000;        ;; 0.1 TON, all messages with amount beyond this values are ingored

() recv_internal(int ton_sent, cell msg_full, slice payload) impure {

    if(payload.slice_empty?())          ;; ignore empty messages
    {
        return ();
    }

    var cs = msg_full.begin_parse();
    var flags = cs~load_uint(4);
    if (flags & 1)                      ;; ignore bounced messages
    {
        return ();
    }

    int op = payload~load_uint(32);     ;; get [op]eration code

    if(op == op::comment)               ;; it's a donation !!! need to change operation, since 0 op is defined for comment
    {
        if(ton_sent < min_amount)       ;; ignore low valued donations
        {
            return ();
        }

        var streamerAddress = payload~load_msg_addr();
        cell msg = begin_cell()
            .store_uint(0x18, 6)
            .store_slice(streamerAddress)
            .store_coins(ton_sent * commision_percent / 100) ;; same as (tons / 100 * commision), but less fraction loss
            .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
            .store_uint(0, 32)          ;; op = 0 for simple comment transfer
            .store_slice(donation_tag)
        .end_cell();

        send_raw_message(msg, 3);
    }

    if(op == op::withdraw)
    {
        slice sender_address = cs~load_msg_addr();
        if(equal_slice_bits(sender_address, our_wallet))
        {
            [int balance, _] = get_balance();
            throw_if(808, balance <= min_amount);    ;; withdraw limited to 0.1 TON, to keep contract alive

            cell msg = begin_cell()
                .store_uint(0x18, 6)
                .store_slice(sender_address)
                .store_coins(balance - min_amount) ;; withdraw (balance - 0.1) TON
                .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
                .store_uint(0, 32)          ;; op = 0 for simple comment transfer
                .store_slice(withdraw_tag)
            .end_cell();

            send_raw_message(msg, 3);
        }
    }

}